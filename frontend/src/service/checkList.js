const checkList = [
{
    category: "network",
    subCategory: "servicePort",
    name: "service-port",
    title: "서비스 포트 상태 점검",
    desc: ["서비스포트 설정/상태, 세션제어를 확인합니다."],
    funcs: [
        "getServicePortConfig",
        "getServicePortStatus",
        "getSessionControlConfig",
    ],
    keys: ["config", "status", "sessionControlConfig"],
    dataKey: "servicePort",
    isComplete: true,
    result: 1,
},
{
    category: "network",
    name: "bonding",
    title: "Bonding 상태 점검",
    desc: [
        "Bonding 설정을 확인합니다.",
        "(Bonding이란 2개 이상의 네트워크 인터페이스 카드를 논리적으로 하나의 인터페이스로 묶어서 NIC의 물리적 장애에 대항하거나 처리량을 늘리는 기술)",
    ],
    funcs: ["getBondingConfig"],
    keys: ["bonding"],
    dataKey: "bonding",
    isComplete: false,
    result: 1,
},
{
    category: "network",
    name: "access-control",
    title: "관리 라우트 상태 점검",
    desc: ["관리 라우트 항목의 변경사항이 있는지를 확인합니다."],
    funcs: ["getAccessControlStatus"],
    keys: ["accessControl"],
    dataKey: "accessControl",
    isComplete: false,
    result: 1,
    },
{
    category: "network",
    subCategory: "filter",
    name: "network-filter",
    title: "Filter 상태 확인",
    desc: ["네트워크 필터의 상태를 확인합니다."],
    funcs: [
        "getSessionFilter",
        "getSessionTimeout",
        "getNetworkFailoverAction",
    ],
    keys: ["sessionFilter", "sessionTimeout", "failoverAction"],
    dataKey: "filter",
    isComplete: false,
    result: 1,
},
{
    category: "network",
    name: "SMP-Affinity",
    title: "SMP-Affinity 설정확인",
    desc: ["SMP-Affinity의 interrupt의 반영 여부를 확인합니다."],
    funcs: ["getSMPAffinityConfig"],
    keys: ["smpAffinity"],
    dataKey: "smpAffinity",
    isComplete: false,
    result: 1,
},
{
    category: "system",
    name: "process",
    title: "주요 프로세스 상태 점검",
    desc: ["주요 프로세스의 상태를 확인합니다."],
    funcs: ["getDiagnosis", 'getHA', 'getSwbypass'],
    keys: ["diagnosis", 'ha', 'swbypass'],
    dataKey: "diagnosis",
    isComplete: false,
    result: 1,
},
{
    category: "system",
    subCategory: "db",
    name: "DB",
    title: "DB 상태 점검",
    desc: ["DB의 상태를 확인합니다."],
    funcs: [
        "getDiagnosis",
        "getDBTransactionCount",
        "getDBConnectionCount",
        "getDBProcessCountAndTrak",
    ],
    keys: ["diagnosis", "transactionCount", "connectionCount", "processCountAndTrak"],
    dataKey: "db",
    isComplete: false,
    result: 1,
},
{
    category: "system",
    subCategory: "disk",
    name: "disk",
    title: "Disk 상태 점검",
    desc: ["Disk의 상태를 확인합니다."],
    funcs: ["getDiagnosis","getDiskUsage", "getDiskState"],
    keys: ["diagnosis","usage", "state"],
    dataKey: "disk",
    isComplete: false,
    result: 1,
},
{
    category: "system",
    name: "maclog",
    title: "MAC 점검",
    desc: ["MAC TABLE을 점검합니다. "],
    funcs: ["getMactable"],
    keys: ["mactable"],
    dataKey: "mactable",
    isComplete: false,
    result: 1,
},
{
    category: "wpconsole",
    title: "보호 대상 서비스 확인",
    desc: ["SSL 프로파일 만료 기간, 보호 대상 서버 정보를 확인합니다."],
    funcs: ["getNetworkConf"],
    keys: ["networkConf"],
    name: "network-conf",
    dataKey: "networkConf",
    isComplete: false,
    result: 1,
},

{
    category: 'wpconsole',
    title: '탐지로그 분석',
    desc: ['과로깅, 미등록 웹사이트, 보안 탐지 테스트, 예외처리를 확인합니다.'],
    funcs: [
    'getBasicRule',
    'getUserDefinedPatternStatistics',
    'getPolicyRule',
    'getVirtualHost',
    'getExceptionPattern',
    'getRuleCount',
    'getRuleCountQuarter',
    'getRuleCountWeek',
    'getRuleCountDay',
    'getRuleCountDayByRuleID',
    ],
    keys: [
    'basicRule',
    'userDefinedPatternStatistics',
    'policyRule',
    'virtualHost',
    'exceptionPattern',
    'ruleCount',
    'ruleCountQuarter',
    'ruleCountWeek',
    'ruleCountDay',
    'ruleCountDayByRuleID',
    ],
    name: 'intrusionlog-analyzer',
    dataKey : 'ruleCount',
    isComplete: false,
    result: 1,
},

{
    category: "wpconsole",
    title: "정책 동기화 확인",
    desc: ["PLS연동 설정을 확인합니다."],
    funcs: ["getPlsStatus", "getPlsAuditLog"],
    keys: ["plsStatus", "plsAuditLog"],
    name: "pls",
    dataKey: "plsStatus",
    isComplete: false,
    result: 1,
},

/*{
    category: 'system',
    title: '시스템 로그 분석',
    desc: ['운영 중 기록되는 로그를 분석하여 운영상태를 점검합니다.'],
    funcs: ['getLogStatistics', 'getCoredumpStatistics', 'getLogAnalyzeResult'],
    keys: ['logStatistics', 'coredumpStatistics', 'logAnalyzeResult'],
    name: 'log-analyzer',
    dataKey : 'logStatistics',
    isComplete: false,
    result: 1,
},
{
    category: 'wpconsole',
    title: '주요 운영 정책 백업',
    desc: ['운영 정책의 백업 설정을 확인합니다.'],
    funcs: ['execPolicyBackup'],
    keys: ['policyBackupResult'],
    name: 'policy-backup',
    dataKey : 'policyBackupResult',
    isComplete: false,
    result: 1,
},*/
];

export default checkList;
